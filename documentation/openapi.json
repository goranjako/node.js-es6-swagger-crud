{
  "openapi": "3.0.1",
  "info": {
    "title": "Node.js-ES6-Swagger-CRUD",
    "description": "This is a sample server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:4000/"
    }
  ],
  "schemes": [{ "https": "https" }, { "http": "http" }],
  "tags": [
    {
      "name": "User",
      "description": "Authorization",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Product",
      "description": "Access to Product orders"
    },
    {
      "name": "Order",
      "description": "Order Operations ",
      "externalDocs": {
        "description": "Orders",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": ["User"],
        "summary": "Register",
        "operationId": "register",
        "requestBody": {
          "description": "user register",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login",
        "operationId": "Login",
        "requestBody": {
          "description": "user Login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        }
      }
    },

    "/product": {
      "post": {
        "tags": ["Product"],
        "summary": "Product Create",
        "operationId": "Product Create",
        "requestBody": {
          "description": "Products",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Product not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },

      "get": {
        "tags": ["Product"],

        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Product not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/product/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get Product",
        "operationId": "Get Product ",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ProductId ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Product not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },

      "put": {
        "tags": ["Product"],
        "summary": "Update Product",
        "operationId": "Update Product ",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "OrderId ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Product not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete Product",
        "operationId": "Delete Product ",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "OrderId ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Product not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },

    "/order": {
      "post": {
        "tags": ["Order"],
        "summary": "Order Create",
        "operationId": "order Create",
        "requestBody": {
          "description": "Order",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Order not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },

      "get": {
        "tags": ["Order"],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Order not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/order/{id}": {
      "get": {
        "tags": ["Order"],
        "summary": "Get Order",
        "operationId": "order",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "OrderId ",
            "schema": {
              "id": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Order not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },

      "put": {
        "tags": ["Order"],
        "summary": "Update Order",
        "operationId": "order",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "OrderId ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Order",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Order not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["Order"],
        "summary": "Delete Order",
        "operationId": "order ",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "OrderId ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/components/schemas/Order"
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Order not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "id": {
        "properties": {
          "uuid": {
            "type": "string"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },

          "price": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string",
            "enum": ["$", "€"]
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "isfreeshipping": {
            "type": "boolean",
            "default": false
          }
        },
        "xml": {
          "name": "Product"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Login"
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "UserId": {
            "type": "string"
          },
          "ProductId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "totalPrice": {
            "type": "integer",
            "format": "int64"
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "authorization",
        "in": "header"
      }
    }
  }
}
